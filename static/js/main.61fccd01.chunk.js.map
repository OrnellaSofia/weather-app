{"version":3,"sources":["components/Input.js","components/CityTitle.js","components/TempText.js","components/WeatherDisplay.js","components/SearchButton.js","components/AppTitle.js","components/AppFooter.js","keys.tsx","App.js","reportWebVitals.js","index.js"],"names":["StyledInput","styled","input","CityTitle","h2","TempText","p","StyledWeatherDisplay","div","WeatherDisplay","data","aria-label","name","alt","src","weather","icon","description","replace","l","toUpperCase","main","temp","temp_max","temp_min","SearchButton","button","AppTitle","h1","StyledFooterContainer","footer","StyledFooterText","AppFooter","href","target","apiKeys","App","useState","value","setValue","setData","useEffect","a","fetch","res","json","fetchData","handleSearch","length","getData","searchData","props","cod","error","message","className","onKeyDown","e","key","onChange","event","placeholder","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mRAEaA,EAAcC,IAAOC,MAAV,4NCAXC,EAAYF,IAAOG,GAAV,8ECATC,EAAWJ,IAAOK,EAAV,qG,OCGRC,EAAuBN,IAAOO,IAAV,uXAsClBC,EAtBe,SAAC,GAAY,IAAXC,EAAU,EAAVA,KAE5B,OACI,cAACH,EAAD,UACKG,EACC,qCACI,gCACE,cAACP,EAAD,CAAWQ,aAAW,QAAtB,SAA+BD,EAAKE,OACpC,qBAAKC,IAAI,eAAeC,IAAG,2CAAsCJ,EAAKK,QAAQ,GAAGC,KAAtD,UAC3B,8BAAON,EAAKK,QAAQ,GAAGE,YAAaC,QAAQ,SAAS,SAAAC,GAAC,OAAIA,EAAEC,sBAEhE,gCACI,eAACf,EAAD,2BAAwBK,EAAKW,KAAKC,QAClC,eAACjB,EAAD,mBAAgBK,EAAKW,KAAKE,SAA1B,YACA,eAAClB,EAAD,mBAAgBK,EAAKW,KAAKG,SAA1B,kBAGJ,oDCpCHC,EAAexB,IAAOyB,OAAV,2VCAZC,EAAW1B,IAAO2B,GAAV,oICAfC,EAAwB5B,IAAO6B,OAAV,4JASrBC,EAAmB9B,IAAOK,EAAV,kJAmBP0B,EAVG,WACd,OACI,cAACH,EAAD,UACI,eAACE,EAAD,yBACe,mBAAGE,KAAK,kCAAkCC,OAAO,SAAjD,kCCtBZC,EAFC,mCC8EDC,MArEf,WACE,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAwBF,qBAAxB,mBAAO3B,EAAP,KAAa8B,EAAb,KAEAC,qBAAU,WAAK,4CACb,8BAAAC,EAAA,sEACsBC,MAAM,iEAAD,OAAkER,EAAlE,kBAD3B,cACUS,EADV,gBAEuBA,EAAIC,OAF3B,OAEUnC,EAFV,OAGI8B,EAAQ9B,GAHZ,4CADa,uBAAC,WAAD,wBAMboC,KACC,IAEH,IAUMC,EAAY,uCAAG,4BAAAL,EAAA,0DACdJ,EAAMU,OADQ,gCAEQC,EAAQX,GAFhB,QAEXY,EAFW,QAGAC,MAAMzC,KACjB8B,EAAQU,EAAWC,MAAMzC,MAEzB8B,EAAQ,MANG,2CAAH,qDAWZS,EAAO,uCAAG,WAAOX,GAAP,iBAAAI,EAAA,sEACMC,MAAM,oDAAD,OAAqDL,EAArD,kBAAoEH,EAApE,kBADX,cACNS,EADM,gBAEOA,EAAIC,OAFX,UAGK,SADXnC,EAFM,QAGH0C,IAHG,0CAID,CACHD,MAAO,CACHE,MAAO3C,EAAK4C,WANZ,iCAWD,CACHH,MAAO,CACHzC,UAbA,4CAAH,sDAkBb,OACE,sBAAK6C,UAAU,MAAf,UACI,sBAAKC,UArCW,SAACC,GACL,UAAVA,EAAEC,KACJX,KAmCA,UACI,cAACpB,EAAD,0BACA,cAAC3B,EAAD,CACI2D,SA5CO,SAACC,GAClBrB,EAASqB,EAAM1B,OAAOI,QA4CZA,MAAOA,EACPuB,YAAY,wBAEhB,cAACpC,EAAD,CAAcqC,QAASf,EAAvB,oBACA,cAAC,EAAD,CAAgBrC,KAAMA,OAE1B,cAAC,EAAD,QC7DOqD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.61fccd01.chunk.js","sourcesContent":["import styled from 'styled-components'\r\n\r\nexport const StyledInput = styled.input`\r\n  width: 70vw;\r\n  padding: 12px 20px;\r\n  margin: 40px 0px 20px 0px;\r\n  display: inline-block;\r\n  border: 1px solid #ccc;\r\n  border-radius: 4px;\r\n  box-sizing: border-box;\r\n  font-size: 20px;\r\n`;","import styled from 'styled-components';\r\n\r\nexport const CityTitle = styled.h2`\r\n    margin: 5px 0px 0px 0px;\r\n    padding: none;\r\n`;","import styled from 'styled-components';\n\nexport const TempText = styled.p`\n    /* margin-bottom: 3px; */\n    margin: none;\n    font-weight: 400;\n`;","import React from 'react';\r\nimport styled from 'styled-components'\r\nimport { CityTitle } from './CityTitle';\r\nimport { TempText } from './TempText';\r\n\r\nexport const StyledWeatherDisplay = styled.div`\r\n    align-content: center;\r\n    border: 1px solid;\r\n    background-color: white;\r\n    box-shadow: 0px 1px 4px 0px rgba(0, 0, 0, 0.3);\r\n    box-sizing: border-box;\r\n    margin: auto;\r\n    margin-top: 70px;\r\n    padding: 20px;\r\n    text-align: center;\r\n    height: 200px;\r\n    width: 500px;\r\n    display: grid;\r\n    grid-template-columns: 50% 50%;\r\n`;\r\n\r\nexport const WeatherDisplay = ({data}) => {\r\n\r\n    return(\r\n        <StyledWeatherDisplay>\r\n            {data ?\r\n              <>\r\n                  <div>\r\n                    <CityTitle aria-label=\"title\">{data.name}</CityTitle>\r\n                    <img alt='Weather logo' src={`http://openweathermap.org/img/wn/${data.weather[0].icon}.png`}/>\r\n                    <div>{(data.weather[0].description).replace(/\\b\\w/g, l => l.toUpperCase())}</div>\r\n                </div>\r\n                <div>\r\n                    <TempText>Temperature: {data.main.temp}</TempText>\r\n                    <TempText>Max: {data.main.temp_max} C°</TempText>\r\n                    <TempText>Min: {data.main.temp_min} C°</TempText>\r\n                </div>\r\n              </>\r\n              : <div>City noy found</div> }\r\n        </StyledWeatherDisplay>\r\n    )\r\n};\r\n\r\nexport default WeatherDisplay;\r\n\r\n","import styled from 'styled-components'\r\n\r\nexport const SearchButton = styled.button`\r\n    background-color: white;\r\n    border: none;\r\n    padding: 10px;\r\n    border-radius: 6px;\r\n    text-align: center;\r\n    display: block;\r\n    height: auto;\r\n    width: auto;\r\n    cursor: pointer;\r\n    font-size: 20px;\r\n    margin: auto;\r\n    color: #555555;\r\n    &:active{\r\n        background-color: #D5D9E1;\r\n    }\r\n`;","import styled from 'styled-components';\n\nexport const AppTitle = styled.h1`\n    margin: 0px;\n    text-align: left;\n    padding: none;\n    color: #fefbd8;\n    font-size: 36px;\n`;","import styled from 'styled-components';\n\nconst StyledFooterContainer = styled.footer`\n    margin: 0px;\n    text-align: left;\n    padding: none;\n    color: #fefbd8;\n    font-size: 36px;\n    margin-top: 150px;\n`;\n\nconst StyledFooterText = styled.p`\n    font-size: 14px;\n    text-align: center;\n    a{\n        text-decoration: none;\n        color: inherit\n    }\n`;\n\nconst AppFooter = () => {\n    return(\n        <StyledFooterContainer>\n            <StyledFooterText>\n                Created by <a href=\"https://github.com/OrnellaSofia\" target=\"_blank\">Ornella Acerbi</a>\n            </StyledFooterText>\n        </StyledFooterContainer>\n    )\n};\n\nexport default AppFooter;","const apiKeys = \"3363377f6299bd7b3df6b6cd2ae93b39\";\r\n\r\nexport default apiKeys; ","import './App.css';\nimport React, { useEffect, useState } from 'react';\nimport { StyledInput } from './components/Input';\nimport WeatherDisplay from './components/WeatherDisplay';\nimport { SearchButton } from './components/SearchButton';\nimport { AppTitle } from './components/AppTitle';\nimport AppFooter from './components/AppFooter';\nimport apiKeys from './keys';\n\nfunction App() {\n  const [value, setValue] = useState(\"\")\n  const [data, setData] = useState()\n\n  useEffect(()=> {\n    async function fetchData () {\n        const res = await fetch(`http://api.openweathermap.org/data/2.5/weather?q=London&appid=${apiKeys}&units=metric`);\n        const data = await res.json();\n        setData(data)\n    }\n    fetchData()\n  }, [])\n\n  const handleChange = (event) => {\n      setValue(event.target.value)\n  }\n\n  const handleKeyDown = (e) => {\n      if (e.key === 'Enter') {\n        handleSearch()\n      }\n    }\n\n  const handleSearch = async () => {\n      if(value.length) {\n        let searchData = await getData(value)\n        if (searchData.props.data){\n            setData(searchData.props.data)\n        }else{\n            setData(null)\n        }\n      }\n  }\n\n  const getData = async (value) => {\n      const res = await fetch(`http://api.openweathermap.org/data/2.5/weather?q=${value}&appid=${apiKeys}&units=metric`)\n      const data = await res.json()\n      if (data.cod === \"404\"){\n          return {\n              props: {\n                  error: data.message\n              }\n          }\n      }\n      else{\n          return {\n              props: {\n                  data\n              }\n          }\n      }\n  }\n  return (\n    <div className=\"App\">\n        <div onKeyDown={handleKeyDown}>\n            <AppTitle>Weather App</AppTitle>\n            <StyledInput\n                onChange={handleChange}\n                value={value}\n                placeholder=\"Please enter a city\"\n            />\n            <SearchButton onClick={handleSearch}>Search</SearchButton>\n            <WeatherDisplay data={data}/>\n        </div>\n        <AppFooter />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}